name: Upload Release

on:
  push:
    tags:
      - 'v*'
  
jobs:
  call-build:
    uses: ./.github/workflows/build-artifacts.yml

    permissions:
      id-token: write
      contents: read
      attestations: write

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    
    permissions:
      contents: write

    steps:
      - name: Generate Release Notes
        id: notes
        uses: RedCrafter07/release-notes-action@v1.0.0
        with:
          tag-name: ${{ github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: 'main'

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: LiteHttpd ${{ github.ref }}
          body: ${{ steps.notes.outputs.release-notes }}
          draft: false
          prerelease: false    
    
  release:
    name: Upload Release
    needs: [call-build, create-release]
    runs-on: ${{matrix.os}}
    
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]
        build_type: [Debug, Release]
        compiler: [MSVC, GCC]
        exclude:
          - os: ubuntu-latest
            compiler: MSVC

    permissions:
      contents: write
    
    steps:
      - name: Get Short SHA
        uses: benjlevesque/short-sha@v3.0
        id: short-sha
        with:
          length: 7

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: LiteHttpd-${{runner.os}}-${{runner.arch}}-${{matrix.compiler}}-${{matrix.build_type}}-${{ steps.short-sha.outputs.sha }}
          
      - name: Package - Windows
        if: runner.os == 'Windows'
        shell: pwsh
        working-directory: ${{github.workspace}}
        run: Compress-Archive -Path .\* -DestinationPath package.zip
          
      - name: Package - MacOS and Linux
        if: runner.os != 'Windows'
        working-directory: ${{github.workspace}}
        run: tar -zcvf package.tar.gz ./*
    
      - name: Upload - Windows
        if: runner.os == 'Windows'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./package.zip
          asset_name: LiteHttpd-${{runner.os}}-${{runner.arch}}-${{matrix.compiler}}-${{matrix.build_type}}-${{ github.ref_name }}.zip
          asset_content_type: application/zip
    
      - name: Upload - MacOS and Linux
        if: runner.os != 'Windows'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./package.tar.gz
          asset_name: LiteHttpd-${{runner.os}}-${{runner.arch}}-${{matrix.compiler}}-${{matrix.build_type}}-${{ github.ref_name }}.tar.gz
          asset_content_type: application/gzip